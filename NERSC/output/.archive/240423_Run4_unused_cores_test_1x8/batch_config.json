{
    "batchLabel": "240423_Run4_unused_cores_test_1x8",
    "saveFolder": "/pscratch/sd/a/adammwea/2DNetworkSimulations/NERSC/output/240423_Run4_unused_cores_test_1x8",
    "method": "evol",
    "cfgFile": "/pscratch/sd/a/adammwea/2DNetworkSimulations/NERSC/cfg.py",
    "netParamsFile": "/pscratch/sd/a/adammwea/2DNetworkSimulations/NERSC/netParams.py",
    "runCfg": {
        "type": "mpi_direct",
        "script": "/pscratch/sd/a/adammwea/2DNetworkSimulations/NERSC/init.py",
        "mpiCommand": "taskset -c $unused_cores mpirun --mca mtl_base_verbose 100 --use-hwthread-cpus --nooversubscribe --map-by ppr:1:core --bind-to core --report-bindings --display-map --display-topo --display-devel-map",
        "nodes": 1,
        "coresPerNode": 8,
        "allocation": "m2043",
        "reservation": null,
        "skip": false,
        "email": "amwe@ucdavis.edu",
        "walltime": "00:30:00",
        "custom": "\nexport OMP_PROC_BIND=spread\nexport KMP_AFFINITY=verbose\nexport FI_LOG_LEVEL=debug\nexport OMPI_MCA_pml=ob1\n\n# Get the list of used cores\nused_cores=$(ps -e -o psr | sort -u | tr '\n' ',' | sed 's/,$//')\n\n# Get the total number of cores\ntotal_cores=$(nproc)\n\n# Generate the list of unused cores\nunused_cores=\"\"\nfor ((i=0; i<$total_cores; i++)); do\n    if [[ $used_cores != *\"$i\"* ]]; then\n        unused_cores=\"$unused_cores,$i\"\n    fi\ndone\nunused_cores=${unused_cores#,}\necho \"Total cores: $total_cores\"\necho \"Used cores: $used_cores\"\necho \"Unused cores: $unused_cores\"\n\n"
    },
    "evolCfg": {
        "evolAlgorithm": "custom",
        "fitnessFunc": "<function fitnessFunc at 0x7f0a4ffc0ca0>",
        "fitnessFuncArgs": {
            "pops": {
                "rate_targets": {
                    "E": {
                        "target": 7.5,
                        "width": 2.5,
                        "min": 1
                    },
                    "I": {
                        "target": 30,
                        "width": 10,
                        "min": 2
                    }
                },
                "burts_peak_targets": {
                    "target": 15,
                    "width": 10,
                    "min": 1
                },
                "IBI_targets": {
                    "target": 3000,
                    "width": 2000,
                    "max": 4000
                },
                "baseline_targets": {
                    "target": 1.5,
                    "width": 1.5,
                    "max": 5
                },
                "rate_slope": {
                    "target": 0,
                    "width": 0.5,
                    "max": 0.5
                },
                "baseline_diff": {
                    "target": 5,
                    "width": 2.0,
                    "min": 2
                },
                "burst_peak_variance": {
                    "target": 5,
                    "width": 1.0,
                    "min": 3
                },
                "burst_peak_frequency": {
                    "target": 0.3333333333333333,
                    "width": 0.16666666666666666,
                    "min": 0.25
                }
            },
            "maxFitness": 1000,
            "pop_size": 16
        },
        "pop_size": 16,
        "num_elites": 160,
        "mutation_rate": 0.7,
        "crossover": 0.5,
        "maximize": false,
        "max_generations": 10,
        "time_sleep": 10,
        "maxiter_wait": 270.0,
        "defaultFitness": 1000,
        "initCfg": null
    }
}